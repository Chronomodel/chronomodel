ChronoModel project
"http://www.chronomodel.com"
version 3.0
2024-09-23

——————————————————
CREDITS
——————————————————
Copyright ©2024 CNRS
used under the terms:
CeCILL FREE SOFTWARE LICENSE AGREEMENT
Version 2.1 dated 2013-06-21
"http://www.cecill.info"

This software use C subroutine library from the FFTW project
"http://www.fftw.org/"
distributed under the terms of the GNU General Public License

——————————————————
AUTHORS
——————————————————
Philippe Lanos <philippe.lanos@univ-rennes1.fr>
Helori Lanos <helori.lanos@gmail.com>
Philippe Dufresne <philippe.dufresne@u-bordeaux-montaigne.fr>

——————————————————
BUILD ON MAC
——————————————————

Pre-requisite:
- Xcode (latest version recommended)
- Qt 6 installed on your Mac (latest version recommended)
- Xcode tools installed (for pkgbuild tool, among others…)

The build_all_mac.sh contains everything to:
- create an Xcode project from the .pro file
- build the Xcode project 
- create a package ready to deploy

In your Terminal, go to the project path and then type :
sh build_all_mac.sh 3.2 /your/absolute/path/to/Qt/6.7.2/clang_64/bin/

Note : 3.2 is the version number. We use it when releasing official versions.
You may choose what you want instead when building by yourself.

——————————————————
ADDITIONNAL NOTES
——————————————————
Generate a MAC icon :
Use command line tool in the « icon » folder:
iconutil -c icns Chronomodel.iconset
https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html#//apple_ref/doc/uid/TP40012302-CH7-SW3

——————————————————
WINDOWS COMPILATION NOTES
——————————————————
When compiling on Windows, if you get a message like :
'<UNC path>' is an invalid current directory path. 
Then refer to this documentation to solve the problem :
https://support.microsoft.com/en-us/kb/156276
It will guide you through adding a new register key.
Without it, Qt may fail to compile the resource file Chronomodel.rc

- Install Qt 6 and use the following lines to make a batch file

cls
set "QTDIR=C:\QT\6.7.2"
set PATH=%PATH%;%QTDIR%\bin\;C:\Qt\Tools\mingw1310_64\bin\

set "QMAKESPEC=%QTDIR%\mingw_64\mkspecs\win32-g++"
set "DIRPROJECT=%HOMEPATH%\Documents\GitHub\chronomodel"

rem %QTDIR%\mingw_64\bin\qmake.exe -project %Overwrite the file .pro
echo qmake
 %QTDIR%\mingw_64\bin\qmake.exe -makefile

echo MAJ linguistic
 %QTDIR%\mingw_64\bin\lupdate.exe %DIRPROJECT%\Chronomodel.pro
 %QTDIR%\mingw_64\bin\lrelease.exe %DIRPROJECT%\Chronomodel.pro

C:\Qt\Tools\mingw1310_64\bin\mingw32-make.exe


——————————————————
BUILD ON UBUNTU (linux)
Use the following lines to make a script file
——————————————————
 
#!/bin/bash
# for Ubuntu 18 bionic
# 1 - You need to install, Qt5, Git and two special libraries:

 sudo apt-get update

# 1-1 Install Qt5
# with Ubuntu 14 trusty
# sudo apt-get install qtdeclarative5-dev
sudo apt-get install qtbase5-dev

sudo apt-get install build-essential

# 1-2 Install QtCreator
# with Ubuntu 14 trusty
#sudo apt-get install qt-sdk

# with Ubuntu 18 bionic 
sudo apt-get install qtcreator

# 1-3 Install Git
sudo apt-get install git

# 1-4 Install libraries fftw and QtSVG
sudo apt-get install libfftw3*
sudo apt-get install libqt5svg5* 

# 2 - Download the code on GitHub
git clone https://github.com/Chronomodel/chronomodel.git

# 2-1 Toggle to a special branch
# git checkout -b newLocalBranch --track origin/remoteBranch

# 3 - Make the compilation
# 3-1 Move inside the new directory
cd chronomodel

# 3-2 Change the mode of all files, don't forget the last character "."
sudo chmod -R a+rwx .

# 3-3 Cleaning previous release
sudo rm -r build/release

# 3-4 Update linguistic files

cpu=$(uname -m)
echo $cpu
if [ "$cpu" != "i686" ]
then
	/usr/lib/x86_64-linux-gnu/qt5/bin/lupdate Chronomodel.pro
	/usr/lib/x86_64-linux-gnu/qt5/bin/lrelease Chronomodel.pro
	# 3-4 Create a platform specific MakeFile
	/usr/lib/x86_64-linux-gnu/qt5/bin/qmake Chronomodel.pro
else
	/usr/lib/i386-linux-gnu/qt5/bin/lupdate Chronomodel.pro
	/usr/lib/i386-linux-gnu/qt5/bin/lrelease Chronomodel.pro
	# 3-4 Create a platform specific MakeFile
	/usr/lib/i386-linux-gnu/qt5/bin/qmake Chronomodel.pro
fi

# 3-5 Compile the program
make

# 4 - Copy the directory Calib near the ChronoModel executable
sudo cp -fra deploy/Calib build/release/Calib

# 5 - Launch ChronoModel
# for Version 1.5
# ./build/release/Chronomodel

# For version 2
./build/release/chronomodel